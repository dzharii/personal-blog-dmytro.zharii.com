; Listing generated by Microsoft (R) Optimizing Compiler Version 19.36.32532.0 

	TITLE	D:\my-github\personal-blog-dmytro.zharii.com\articles\2023-06-01-the-value-objects.assets\code-snippets\2023-06-11-the-c-lang-value-object\meters.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_meters_new
PUBLIC	??_C@_0CI@NNPFPOML@Error?3?5Meter?5value?5must?5be?5non?9@ ; `string'
PUBLIC	??_C@_0CK@LLOEAPLH@Error?3?5Meter?5value?5must?5be?5less@ ; `string'
PUBLIC	__real@4479c000
EXTRN	_malloc:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@4479c000
CONST	SEGMENT
__real@4479c000 DD 04479c000r			; 999
CONST	ENDS
;	COMDAT ??_C@_0CK@LLOEAPLH@Error?3?5Meter?5value?5must?5be?5less@
CONST	SEGMENT
??_C@_0CK@LLOEAPLH@Error?3?5Meter?5value?5must?5be?5less@ DB 'Error: Mete'
	DB	'r value must be less than 1000', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NNPFPOML@Error?3?5Meter?5value?5must?5be?5non?9@
CONST	SEGMENT
??_C@_0CI@NNPFPOML@Error?3?5Meter?5value?5must?5be?5non?9@ DB 'Error: Met'
	DB	'er value must be non-negative', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogspy
;	COMDAT _meters_new
_TEXT	SEGMENT
_value$ = 8						; size = 4
_meters_new PROC					; COMDAT
; File D:\my-github\personal-blog-dmytro.zharii.com\articles\2023-06-01-the-value-objects.assets\code-snippets\2023-06-11-the-c-lang-value-object\meters.c
; Line 4
	push	esi
; Line 5
	push	8
	call	_malloc
; Line 6
	movss	xmm1, DWORD PTR _value$[esp+4]
	xorps	xmm0, xmm0
	comiss	xmm0, xmm1
	pop	ecx
	mov	esi, eax
	jbe	SHORT $LN2@meters_new
; Line 7
	push	8
	call	_malloc
	pop	ecx
; Line 8
	mov	DWORD PTR [eax], 1
; Line 9
	mov	DWORD PTR [eax+4], OFFSET ??_C@_0CI@NNPFPOML@Error?3?5Meter?5value?5must?5be?5non?9@
; Line 10
	jmp	SHORT $LN5@meters_new
$LN2@meters_new:
; Line 11
	comiss	xmm1, DWORD PTR __real@4479c000
	jbe	SHORT $LN4@meters_new
; Line 12
	push	8
	call	_malloc
	pop	ecx
; Line 13
	mov	DWORD PTR [eax], 2
; Line 14
	mov	DWORD PTR [eax+4], OFFSET ??_C@_0CK@LLOEAPLH@Error?3?5Meter?5value?5must?5be?5less@
; Line 16
	jmp	SHORT $LN5@meters_new
$LN4@meters_new:
; Line 18
	movss	DWORD PTR [esi], xmm1
; Line 19
	xor	eax, eax
$LN5@meters_new:
; Line 21
	mov	DWORD PTR [esi+4], eax
	mov	eax, esi
	pop	esi
; Line 22
	ret	0
_meters_new ENDP
_TEXT	ENDS
END
