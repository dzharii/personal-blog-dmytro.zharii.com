; Listing generated by Microsoft (R) Optimizing Compiler Version 19.36.32532.0 

	TITLE	D:\my-github\personal-blog-dmytro.zharii.com\articles\2023-06-01-the-value-objects.assets\code-snippets\2023-06-11-the-c-lang-value-object\operation.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_operation_from_string
PUBLIC	_operation_new
EXTRN	_malloc:PROC
EXTRN	_strncmp:PROC
_DATA	SEGMENT
$SG9984	DB	'add', 00H
$SG9987	DB	'sub', 00H
$SG9990	DB	'mul', 00H
$SG9993	DB	'div', 00H
$SG9994	DB	'Error: operation string is invalid', 00H
	ORG $+1
$SG10008 DB	'Error: operation value is invalid', 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_err$1 = -8						; size = 4
_new_op$ = -4						; size = 4
_op_type$ = 8						; size = 4
_operation_new PROC
; File D:\my-github\personal-blog-dmytro.zharii.com\articles\2023-06-01-the-value-objects.assets\code-snippets\2023-06-11-the-c-lang-value-object\operation.c
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 25
	push	8
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _new_op$[ebp], eax
; Line 27
	cmp	DWORD PTR _op_type$[ebp], 0
	jle	SHORT $LN4@operation_
	cmp	DWORD PTR _op_type$[ebp], 5
	jl	SHORT $LN2@operation_
$LN4@operation_:
; Line 28
	push	8
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _err$1[ebp], eax
; Line 29
	mov	eax, DWORD PTR _err$1[ebp]
	mov	DWORD PTR [eax], 2
; Line 30
	mov	ecx, DWORD PTR _err$1[ebp]
	mov	DWORD PTR [ecx+4], OFFSET $SG10008
; Line 31
	mov	edx, DWORD PTR _new_op$[ebp]
	mov	eax, DWORD PTR _err$1[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 32
	jmp	SHORT $LN3@operation_
$LN2@operation_:
; Line 33
	mov	ecx, DWORD PTR _new_op$[ebp]
	mov	edx, DWORD PTR _op_type$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 34
	mov	eax, DWORD PTR _new_op$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@operation_:
; Line 37
	mov	eax, DWORD PTR _new_op$[ebp]
; Line 38
	mov	esp, ebp
	pop	ebp
	ret	0
_operation_new ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_new_op$1 = -8						; size = 4
_err$2 = -4						; size = 4
_op_str$ = 8						; size = 4
_operation_from_string PROC
; File D:\my-github\personal-blog-dmytro.zharii.com\articles\2023-06-01-the-value-objects.assets\code-snippets\2023-06-11-the-c-lang-value-object\operation.c
; Line 5
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 6
	push	3
	push	OFFSET $SG9984
	mov	eax, DWORD PTR _op_str$[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@operation_
; Line 7
	push	1
	call	_operation_new
	add	esp, 4
	jmp	$LN1@operation_
	jmp	$LN1@operation_
$LN2@operation_:
; Line 8
	push	3
	push	OFFSET $SG9987
	mov	ecx, DWORD PTR _op_str$[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@operation_
; Line 9
	push	2
	call	_operation_new
	add	esp, 4
	jmp	$LN1@operation_
	jmp	$LN1@operation_
$LN4@operation_:
; Line 10
	push	3
	push	OFFSET $SG9990
	mov	edx, DWORD PTR _op_str$[ebp]
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@operation_
; Line 11
	push	3
	call	_operation_new
	add	esp, 4
	jmp	SHORT $LN1@operation_
	jmp	SHORT $LN1@operation_
$LN6@operation_:
; Line 12
	push	3
	push	OFFSET $SG9993
	mov	eax, DWORD PTR _op_str$[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@operation_
; Line 13
	push	4
	call	_operation_new
	add	esp, 4
	jmp	SHORT $LN1@operation_
; Line 14
	jmp	SHORT $LN1@operation_
$LN8@operation_:
; Line 15
	push	8
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _err$2[ebp], eax
; Line 16
	mov	ecx, DWORD PTR _err$2[ebp]
	mov	DWORD PTR [ecx], 1
; Line 17
	mov	edx, DWORD PTR _err$2[ebp]
	mov	DWORD PTR [edx+4], OFFSET $SG9994
; Line 18
	push	8
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _new_op$1[ebp], eax
; Line 19
	mov	eax, DWORD PTR _new_op$1[ebp]
	mov	ecx, DWORD PTR _err$2[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 20
	mov	eax, DWORD PTR _new_op$1[ebp]
$LN1@operation_:
; Line 22
	mov	esp, ebp
	pop	ebp
	ret	0
_operation_from_string ENDP
_TEXT	ENDS
END
